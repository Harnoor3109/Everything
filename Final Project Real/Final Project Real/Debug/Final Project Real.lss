
Final Project Real.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000096a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000916  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000096a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000099c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  000009dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002c84  00000000  00000000  00000b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009d1  00000000  00000000  000037b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001133  00000000  00000000  00004181  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000544  00000000  00000000  000052b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000089a  00000000  00000000  000057f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002401  00000000  00000000  00006092  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000158  00000000  00000000  00008493  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e1       	ldi	r30, 0x16	; 22
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 21 04 	call	0x842	; 0x842 <main>
  8e:	0c 94 89 04 	jmp	0x912	; 0x912 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <_Z9freq_8mhzv>:
	if (v>=  2) {data('1'); v-=  2;} else data('0');
	if (v>=  1) {data('1'); v-=  1;} else data('0');

	i2c::stop();
	return;
} // dd ---------------------------------
  96:	e9 eb       	ldi	r30, 0xB9	; 185
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	80 83       	st	Z, r24
  a0:	83 e0       	ldi	r24, 0x03	; 3
  a2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  a6:	0f 93       	push	r16
  a8:	00 e8       	ldi	r16, 0x80	; 128
  aa:	00 93 61 00 	sts	0x0061, r16	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	00 93 61 00 	sts	0x0061, r16	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  b4:	0f 91       	pop	r16
  b6:	08 95       	ret

000000b8 <_ZN3i2cC1Ev>:
  b8:	17 b8       	out	0x07, r1	; 7
  ba:	80 e3       	ldi	r24, 0x30	; 48
  bc:	88 b9       	out	0x08, r24	; 8
  be:	e9 eb       	ldi	r30, 0xB9	; 185
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	80 83       	st	Z, r24
  c8:	83 e0       	ldi	r24, 0x03	; 3
  ca:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  ce:	08 95       	ret

000000d0 <_ZN3i2c5writeEc>:
  d0:	ec eb       	ldi	r30, 0xBC	; 188
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	88 23       	and	r24, r24
  d8:	ec f7       	brge	.-6      	; 0xd4 <_ZN3i2c5writeEc+0x4>
  da:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  de:	84 e8       	ldi	r24, 0x84	; 132
  e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  e4:	ec eb       	ldi	r30, 0xBC	; 188
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	88 23       	and	r24, r24
  ec:	ec f7       	brge	.-6      	; 0xe8 <_ZN3i2c5writeEc+0x18>
  ee:	08 95       	ret

000000f0 <_ZN3i2c7start_wEc>:
  f0:	84 ea       	ldi	r24, 0xA4	; 164
  f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  f6:	ec eb       	ldi	r30, 0xBC	; 188
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	88 23       	and	r24, r24
  fe:	ec f7       	brge	.-6      	; 0xfa <_ZN3i2c7start_wEc+0xa>
 100:	70 e0       	ldi	r23, 0x00	; 0
 102:	66 0f       	add	r22, r22
 104:	77 1f       	adc	r23, r23
 106:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 10a:	84 e8       	ldi	r24, 0x84	; 132
 10c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 110:	ec eb       	ldi	r30, 0xBC	; 188
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	88 23       	and	r24, r24
 118:	ec f7       	brge	.-6      	; 0x114 <_ZN3i2c7start_wEc+0x24>
 11a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 11e:	98 7f       	andi	r25, 0xF8	; 248
 120:	21 e0       	ldi	r18, 0x01	; 1
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	98 31       	cpi	r25, 0x18	; 24
 126:	11 f4       	brne	.+4      	; 0x12c <_ZN3i2c7start_wEc+0x3c>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	c9 01       	movw	r24, r18
 12e:	08 95       	ret

00000130 <_ZN12lcd_16x2_i2c4dataEc>:
 130:	ff 92       	push	r15
 132:	0f 93       	push	r16
 134:	1f 93       	push	r17
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	ec 01       	movw	r28, r24
 13c:	86 2f       	mov	r24, r22
 13e:	80 7f       	andi	r24, 0xF0	; 240
 140:	f8 2e       	mov	r15, r24
 142:	80 e1       	ldi	r24, 0x10	; 16
 144:	68 9f       	mul	r22, r24
 146:	80 01       	movw	r16, r0
 148:	11 24       	eor	r1, r1
 14a:	69 81       	ldd	r22, Y+1	; 0x01
 14c:	65 60       	ori	r22, 0x05	; 5
 14e:	6f 29       	or	r22, r15
 150:	ce 01       	movw	r24, r28
 152:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 156:	69 81       	ldd	r22, Y+1	; 0x01
 158:	61 60       	ori	r22, 0x01	; 1
 15a:	6f 29       	or	r22, r15
 15c:	ce 01       	movw	r24, r28
 15e:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 162:	69 81       	ldd	r22, Y+1	; 0x01
 164:	65 60       	ori	r22, 0x05	; 5
 166:	60 2b       	or	r22, r16
 168:	ce 01       	movw	r24, r28
 16a:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 16e:	69 81       	ldd	r22, Y+1	; 0x01
 170:	61 60       	ori	r22, 0x01	; 1
 172:	60 2b       	or	r22, r16
 174:	ce 01       	movw	r24, r28
 176:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 17a:	df 91       	pop	r29
 17c:	cf 91       	pop	r28
 17e:	1f 91       	pop	r17
 180:	0f 91       	pop	r16
 182:	ff 90       	pop	r15
 184:	08 95       	ret

00000186 <_ZN12lcd_16x2_i2c5instrEc>:
 186:	ff 92       	push	r15
 188:	0f 93       	push	r16
 18a:	1f 93       	push	r17
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
 190:	ec 01       	movw	r28, r24
 192:	86 2f       	mov	r24, r22
 194:	80 7f       	andi	r24, 0xF0	; 240
 196:	f8 2e       	mov	r15, r24
 198:	80 e1       	ldi	r24, 0x10	; 16
 19a:	68 9f       	mul	r22, r24
 19c:	80 01       	movw	r16, r0
 19e:	11 24       	eor	r1, r1
 1a0:	69 81       	ldd	r22, Y+1	; 0x01
 1a2:	64 60       	ori	r22, 0x04	; 4
 1a4:	6f 29       	or	r22, r15
 1a6:	ce 01       	movw	r24, r28
 1a8:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 1ac:	69 81       	ldd	r22, Y+1	; 0x01
 1ae:	6f 29       	or	r22, r15
 1b0:	ce 01       	movw	r24, r28
 1b2:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 1b6:	69 81       	ldd	r22, Y+1	; 0x01
 1b8:	64 60       	ori	r22, 0x04	; 4
 1ba:	60 2b       	or	r22, r16
 1bc:	ce 01       	movw	r24, r28
 1be:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 1c2:	69 81       	ldd	r22, Y+1	; 0x01
 1c4:	60 2b       	or	r22, r16
 1c6:	ce 01       	movw	r24, r28
 1c8:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	1f 91       	pop	r17
 1d2:	0f 91       	pop	r16
 1d4:	ff 90       	pop	r15
 1d6:	08 95       	ret

000001d8 <_ZN12lcd_16x2_i2c10initializeEc>:
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	ec 01       	movw	r28, r24
 1de:	68 83       	st	Y, r22
 1e0:	88 e0       	ldi	r24, 0x08	; 8
 1e2:	89 83       	std	Y+1, r24	; 0x01
 1e4:	ce 01       	movw	r24, r28
 1e6:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 1ea:	6f e0       	ldi	r22, 0x0F	; 15
 1ec:	ce 01       	movw	r24, r28
 1ee:	0e 94 c3 00 	call	0x186	; 0x186 <_ZN12lcd_16x2_i2c5instrEc>
 1f2:	60 e3       	ldi	r22, 0x30	; 48
 1f4:	ce 01       	movw	r24, r28
 1f6:	0e 94 c3 00 	call	0x186	; 0x186 <_ZN12lcd_16x2_i2c5instrEc>
 1fa:	62 e2       	ldi	r22, 0x22	; 34
 1fc:	ce 01       	movw	r24, r28
 1fe:	0e 94 c3 00 	call	0x186	; 0x186 <_ZN12lcd_16x2_i2c5instrEc>
 202:	6c e2       	ldi	r22, 0x2C	; 44
 204:	ce 01       	movw	r24, r28
 206:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 20a:	68 e2       	ldi	r22, 0x28	; 40
 20c:	ce 01       	movw	r24, r28
 20e:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3i2c5writeEc>
 212:	61 e0       	ldi	r22, 0x01	; 1
 214:	ce 01       	movw	r24, r28
 216:	0e 94 c3 00 	call	0x186	; 0x186 <_ZN12lcd_16x2_i2c5instrEc>
 21a:	68 e2       	ldi	r22, 0x28	; 40
 21c:	ce 01       	movw	r24, r28
 21e:	0e 94 c3 00 	call	0x186	; 0x186 <_ZN12lcd_16x2_i2c5instrEc>
 222:	84 e9       	ldi	r24, 0x94	; 148
 224:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <_ZN12lcd_16x2_i2cC1Ev>:
 22e:	ef 92       	push	r14
 230:	ff 92       	push	r15
 232:	1f 93       	push	r17
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	1f 92       	push	r1
 23a:	cd b7       	in	r28, 0x3d	; 61
 23c:	de b7       	in	r29, 0x3e	; 62
 23e:	7c 01       	movw	r14, r24
 240:	0e 94 5c 00 	call	0xb8	; 0xb8 <_ZN3i2cC1Ev>
 244:	ce 01       	movw	r24, r28
 246:	01 96       	adiw	r24, 0x01	; 1
 248:	0e 94 5c 00 	call	0xb8	; 0xb8 <_ZN3i2cC1Ev>
 24c:	6f e3       	ldi	r22, 0x3F	; 63
 24e:	ce 01       	movw	r24, r28
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 256:	84 e9       	ldi	r24, 0x94	; 148
 258:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 25c:	60 e2       	ldi	r22, 0x20	; 32
 25e:	ce 01       	movw	r24, r28
 260:	01 96       	adiw	r24, 0x01	; 1
 262:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 266:	89 2b       	or	r24, r25
 268:	11 f4       	brne	.+4      	; 0x26e <_ZN12lcd_16x2_i2cC1Ev+0x40>
 26a:	10 e2       	ldi	r17, 0x20	; 32
 26c:	01 c0       	rjmp	.+2      	; 0x270 <_ZN12lcd_16x2_i2cC1Ev+0x42>
 26e:	1f e3       	ldi	r17, 0x3F	; 63
 270:	84 e9       	ldi	r24, 0x94	; 148
 272:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 276:	61 e2       	ldi	r22, 0x21	; 33
 278:	ce 01       	movw	r24, r28
 27a:	01 96       	adiw	r24, 0x01	; 1
 27c:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 280:	89 2b       	or	r24, r25
 282:	09 f4       	brne	.+2      	; 0x286 <_ZN12lcd_16x2_i2cC1Ev+0x58>
 284:	11 e2       	ldi	r17, 0x21	; 33
 286:	84 e9       	ldi	r24, 0x94	; 148
 288:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 28c:	62 e2       	ldi	r22, 0x22	; 34
 28e:	ce 01       	movw	r24, r28
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 296:	89 2b       	or	r24, r25
 298:	09 f4       	brne	.+2      	; 0x29c <_ZN12lcd_16x2_i2cC1Ev+0x6e>
 29a:	12 e2       	ldi	r17, 0x22	; 34
 29c:	84 e9       	ldi	r24, 0x94	; 148
 29e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2a2:	63 e2       	ldi	r22, 0x23	; 35
 2a4:	ce 01       	movw	r24, r28
 2a6:	01 96       	adiw	r24, 0x01	; 1
 2a8:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 2ac:	89 2b       	or	r24, r25
 2ae:	09 f4       	brne	.+2      	; 0x2b2 <_ZN12lcd_16x2_i2cC1Ev+0x84>
 2b0:	13 e2       	ldi	r17, 0x23	; 35
 2b2:	84 e9       	ldi	r24, 0x94	; 148
 2b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2b8:	64 e2       	ldi	r22, 0x24	; 36
 2ba:	ce 01       	movw	r24, r28
 2bc:	01 96       	adiw	r24, 0x01	; 1
 2be:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 2c2:	89 2b       	or	r24, r25
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <_ZN12lcd_16x2_i2cC1Ev+0x9a>
 2c6:	14 e2       	ldi	r17, 0x24	; 36
 2c8:	84 e9       	ldi	r24, 0x94	; 148
 2ca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2ce:	65 e2       	ldi	r22, 0x25	; 37
 2d0:	ce 01       	movw	r24, r28
 2d2:	01 96       	adiw	r24, 0x01	; 1
 2d4:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 2d8:	89 2b       	or	r24, r25
 2da:	09 f4       	brne	.+2      	; 0x2de <_ZN12lcd_16x2_i2cC1Ev+0xb0>
 2dc:	15 e2       	ldi	r17, 0x25	; 37
 2de:	84 e9       	ldi	r24, 0x94	; 148
 2e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2e4:	66 e2       	ldi	r22, 0x26	; 38
 2e6:	ce 01       	movw	r24, r28
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 2ee:	89 2b       	or	r24, r25
 2f0:	09 f4       	brne	.+2      	; 0x2f4 <_ZN12lcd_16x2_i2cC1Ev+0xc6>
 2f2:	16 e2       	ldi	r17, 0x26	; 38
 2f4:	84 e9       	ldi	r24, 0x94	; 148
 2f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2fa:	67 e2       	ldi	r22, 0x27	; 39
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 96       	adiw	r24, 0x01	; 1
 300:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 304:	89 2b       	or	r24, r25
 306:	09 f4       	brne	.+2      	; 0x30a <_ZN12lcd_16x2_i2cC1Ev+0xdc>
 308:	17 e2       	ldi	r17, 0x27	; 39
 30a:	ec eb       	ldi	r30, 0xBC	; 188
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	84 e9       	ldi	r24, 0x94	; 148
 310:	80 83       	st	Z, r24
 312:	80 83       	st	Z, r24
 314:	61 2f       	mov	r22, r17
 316:	c7 01       	movw	r24, r14
 318:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <_ZN12lcd_16x2_i2c10initializeEc>
 31c:	0f 90       	pop	r0
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	ff 90       	pop	r15
 326:	ef 90       	pop	r14
 328:	08 95       	ret

0000032a <_ZN12lcd_16x2_i2c2daEc>:
 32a:	ef 92       	push	r14
 32c:	ff 92       	push	r15
 32e:	0f 93       	push	r16
 330:	1f 93       	push	r17
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	ec 01       	movw	r28, r24
 338:	e6 2e       	mov	r14, r22
 33a:	0c eb       	ldi	r16, 0xBC	; 188
 33c:	10 e0       	ldi	r17, 0x00	; 0
 33e:	0f 2e       	mov	r0, r31
 340:	f4 e9       	ldi	r31, 0x94	; 148
 342:	ff 2e       	mov	r15, r31
 344:	f0 2d       	mov	r31, r0
 346:	f8 01       	movw	r30, r16
 348:	f0 82       	st	Z, r15
 34a:	68 81       	ld	r22, Y
 34c:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 350:	6e 2d       	mov	r22, r14
 352:	ce 01       	movw	r24, r28
 354:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 358:	f8 01       	movw	r30, r16
 35a:	f0 82       	st	Z, r15
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	ef 90       	pop	r14
 368:	08 95       	ret

0000036a <_ZN12lcd_16x2_i2c2ddEm>:
 36a:	af 92       	push	r10
 36c:	bf 92       	push	r11
 36e:	cf 92       	push	r12
 370:	df 92       	push	r13
 372:	ef 92       	push	r14
 374:	ff 92       	push	r15
 376:	0f 93       	push	r16
 378:	1f 93       	push	r17
 37a:	cf 93       	push	r28
 37c:	df 93       	push	r29
 37e:	ec 01       	movw	r28, r24
 380:	6a 01       	movw	r12, r20
 382:	7b 01       	movw	r14, r22
 384:	84 e9       	ldi	r24, 0x94	; 148
 386:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 38a:	68 81       	ld	r22, Y
 38c:	ce 01       	movw	r24, r28
 38e:	0e 94 78 00 	call	0xf0	; 0xf0 <_ZN3i2c7start_wEc>
 392:	84 e6       	ldi	r24, 0x64	; 100
 394:	c8 16       	cp	r12, r24
 396:	d1 04       	cpc	r13, r1
 398:	e1 04       	cpc	r14, r1
 39a:	f1 04       	cpc	r15, r1
 39c:	20 f4       	brcc	.+8      	; 0x3a6 <_ZN12lcd_16x2_i2c2ddEm+0x3c>
 39e:	60 e2       	ldi	r22, 0x20	; 32
 3a0:	ce 01       	movw	r24, r28
 3a2:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 3a6:	8a e0       	ldi	r24, 0x0A	; 10
 3a8:	c8 16       	cp	r12, r24
 3aa:	d1 04       	cpc	r13, r1
 3ac:	e1 04       	cpc	r14, r1
 3ae:	f1 04       	cpc	r15, r1
 3b0:	20 f4       	brcc	.+8      	; 0x3ba <_ZN12lcd_16x2_i2c2ddEm+0x50>
 3b2:	60 e2       	ldi	r22, 0x20	; 32
 3b4:	ce 01       	movw	r24, r28
 3b6:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 3ba:	c1 14       	cp	r12, r1
 3bc:	8a ec       	ldi	r24, 0xCA	; 202
 3be:	d8 06       	cpc	r13, r24
 3c0:	8a e9       	ldi	r24, 0x9A	; 154
 3c2:	e8 06       	cpc	r14, r24
 3c4:	8b e3       	ldi	r24, 0x3B	; 59
 3c6:	f8 06       	cpc	r15, r24
 3c8:	08 f4       	brcc	.+2      	; 0x3cc <_ZN12lcd_16x2_i2c2ddEm+0x62>
 3ca:	24 c1       	rjmp	.+584    	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 3cc:	c7 01       	movw	r24, r14
 3ce:	b6 01       	movw	r22, r12
 3d0:	20 e0       	ldi	r18, 0x00	; 0
 3d2:	3a ec       	ldi	r19, 0xCA	; 202
 3d4:	4a e9       	ldi	r20, 0x9A	; 154
 3d6:	5b e3       	ldi	r21, 0x3B	; 59
 3d8:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 3dc:	a6 2e       	mov	r10, r22
 3de:	b7 2e       	mov	r11, r23
 3e0:	08 2f       	mov	r16, r24
 3e2:	19 2f       	mov	r17, r25
 3e4:	60 e3       	ldi	r22, 0x30	; 48
 3e6:	62 0f       	add	r22, r18
 3e8:	ce 01       	movw	r24, r28
 3ea:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 3ee:	ca 2c       	mov	r12, r10
 3f0:	db 2c       	mov	r13, r11
 3f2:	e0 2e       	mov	r14, r16
 3f4:	f1 2e       	mov	r15, r17
 3f6:	c1 14       	cp	r12, r1
 3f8:	81 ee       	ldi	r24, 0xE1	; 225
 3fa:	d8 06       	cpc	r13, r24
 3fc:	85 ef       	ldi	r24, 0xF5	; 245
 3fe:	e8 06       	cpc	r14, r24
 400:	85 e0       	ldi	r24, 0x05	; 5
 402:	f8 06       	cpc	r15, r24
 404:	b0 f0       	brcs	.+44     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 406:	c7 01       	movw	r24, r14
 408:	b6 01       	movw	r22, r12
 40a:	20 e0       	ldi	r18, 0x00	; 0
 40c:	31 ee       	ldi	r19, 0xE1	; 225
 40e:	45 ef       	ldi	r20, 0xF5	; 245
 410:	55 e0       	ldi	r21, 0x05	; 5
 412:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 416:	a6 2e       	mov	r10, r22
 418:	b7 2e       	mov	r11, r23
 41a:	08 2f       	mov	r16, r24
 41c:	19 2f       	mov	r17, r25
 41e:	60 e3       	ldi	r22, 0x30	; 48
 420:	62 0f       	add	r22, r18
 422:	ce 01       	movw	r24, r28
 424:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 428:	ca 2c       	mov	r12, r10
 42a:	db 2c       	mov	r13, r11
 42c:	e0 2e       	mov	r14, r16
 42e:	f1 2e       	mov	r15, r17
 430:	fb c0       	rjmp	.+502    	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 432:	60 e3       	ldi	r22, 0x30	; 48
 434:	ce 01       	movw	r24, r28
 436:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 43a:	f6 c0       	rjmp	.+492    	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 43c:	80 e8       	ldi	r24, 0x80	; 128
 43e:	c8 16       	cp	r12, r24
 440:	86 e9       	ldi	r24, 0x96	; 150
 442:	d8 06       	cpc	r13, r24
 444:	88 e9       	ldi	r24, 0x98	; 152
 446:	e8 06       	cpc	r14, r24
 448:	f1 04       	cpc	r15, r1
 44a:	d8 f0       	brcs	.+54     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 44c:	c7 01       	movw	r24, r14
 44e:	b6 01       	movw	r22, r12
 450:	20 e8       	ldi	r18, 0x80	; 128
 452:	36 e9       	ldi	r19, 0x96	; 150
 454:	48 e9       	ldi	r20, 0x98	; 152
 456:	50 e0       	ldi	r21, 0x00	; 0
 458:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 45c:	a6 2e       	mov	r10, r22
 45e:	b7 2e       	mov	r11, r23
 460:	08 2f       	mov	r16, r24
 462:	19 2f       	mov	r17, r25
 464:	60 e3       	ldi	r22, 0x30	; 48
 466:	62 0f       	add	r22, r18
 468:	ce 01       	movw	r24, r28
 46a:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 46e:	ca 2c       	mov	r12, r10
 470:	db 2c       	mov	r13, r11
 472:	e0 2e       	mov	r14, r16
 474:	f1 2e       	mov	r15, r17
 476:	e2 c0       	rjmp	.+452    	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 478:	60 e3       	ldi	r22, 0x30	; 48
 47a:	ce 01       	movw	r24, r28
 47c:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 480:	dd c0       	rjmp	.+442    	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
 482:	80 e4       	ldi	r24, 0x40	; 64
 484:	c8 16       	cp	r12, r24
 486:	82 e4       	ldi	r24, 0x42	; 66
 488:	d8 06       	cpc	r13, r24
 48a:	8f e0       	ldi	r24, 0x0F	; 15
 48c:	e8 06       	cpc	r14, r24
 48e:	f1 04       	cpc	r15, r1
 490:	d8 f0       	brcs	.+54     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 492:	c7 01       	movw	r24, r14
 494:	b6 01       	movw	r22, r12
 496:	20 e4       	ldi	r18, 0x40	; 64
 498:	32 e4       	ldi	r19, 0x42	; 66
 49a:	4f e0       	ldi	r20, 0x0F	; 15
 49c:	50 e0       	ldi	r21, 0x00	; 0
 49e:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 4a2:	a6 2e       	mov	r10, r22
 4a4:	b7 2e       	mov	r11, r23
 4a6:	08 2f       	mov	r16, r24
 4a8:	19 2f       	mov	r17, r25
 4aa:	60 e3       	ldi	r22, 0x30	; 48
 4ac:	62 0f       	add	r22, r18
 4ae:	ce 01       	movw	r24, r28
 4b0:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 4b4:	ca 2c       	mov	r12, r10
 4b6:	db 2c       	mov	r13, r11
 4b8:	e0 2e       	mov	r14, r16
 4ba:	f1 2e       	mov	r15, r17
 4bc:	c9 c0       	rjmp	.+402    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 4be:	60 e3       	ldi	r22, 0x30	; 48
 4c0:	ce 01       	movw	r24, r28
 4c2:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 4c6:	c4 c0       	rjmp	.+392    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 4c8:	80 ea       	ldi	r24, 0xA0	; 160
 4ca:	c8 16       	cp	r12, r24
 4cc:	86 e8       	ldi	r24, 0x86	; 134
 4ce:	d8 06       	cpc	r13, r24
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	e8 06       	cpc	r14, r24
 4d4:	f1 04       	cpc	r15, r1
 4d6:	d8 f0       	brcs	.+54     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4d8:	c7 01       	movw	r24, r14
 4da:	b6 01       	movw	r22, r12
 4dc:	20 ea       	ldi	r18, 0xA0	; 160
 4de:	36 e8       	ldi	r19, 0x86	; 134
 4e0:	41 e0       	ldi	r20, 0x01	; 1
 4e2:	50 e0       	ldi	r21, 0x00	; 0
 4e4:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 4e8:	a6 2e       	mov	r10, r22
 4ea:	b7 2e       	mov	r11, r23
 4ec:	08 2f       	mov	r16, r24
 4ee:	19 2f       	mov	r17, r25
 4f0:	60 e3       	ldi	r22, 0x30	; 48
 4f2:	62 0f       	add	r22, r18
 4f4:	ce 01       	movw	r24, r28
 4f6:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 4fa:	ca 2c       	mov	r12, r10
 4fc:	db 2c       	mov	r13, r11
 4fe:	e0 2e       	mov	r14, r16
 500:	f1 2e       	mov	r15, r17
 502:	b0 c0       	rjmp	.+352    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 504:	60 e3       	ldi	r22, 0x30	; 48
 506:	ce 01       	movw	r24, r28
 508:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 50c:	ab c0       	rjmp	.+342    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 50e:	80 e1       	ldi	r24, 0x10	; 16
 510:	c8 16       	cp	r12, r24
 512:	87 e2       	ldi	r24, 0x27	; 39
 514:	d8 06       	cpc	r13, r24
 516:	e1 04       	cpc	r14, r1
 518:	f1 04       	cpc	r15, r1
 51a:	d8 f0       	brcs	.+54     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 51c:	c7 01       	movw	r24, r14
 51e:	b6 01       	movw	r22, r12
 520:	20 e1       	ldi	r18, 0x10	; 16
 522:	37 e2       	ldi	r19, 0x27	; 39
 524:	40 e0       	ldi	r20, 0x00	; 0
 526:	50 e0       	ldi	r21, 0x00	; 0
 528:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 52c:	a6 2e       	mov	r10, r22
 52e:	b7 2e       	mov	r11, r23
 530:	08 2f       	mov	r16, r24
 532:	19 2f       	mov	r17, r25
 534:	60 e3       	ldi	r22, 0x30	; 48
 536:	62 0f       	add	r22, r18
 538:	ce 01       	movw	r24, r28
 53a:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 53e:	ca 2c       	mov	r12, r10
 540:	db 2c       	mov	r13, r11
 542:	e0 2e       	mov	r14, r16
 544:	f1 2e       	mov	r15, r17
 546:	97 c0       	rjmp	.+302    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 548:	60 e3       	ldi	r22, 0x30	; 48
 54a:	ce 01       	movw	r24, r28
 54c:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 550:	92 c0       	rjmp	.+292    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 552:	88 ee       	ldi	r24, 0xE8	; 232
 554:	c8 16       	cp	r12, r24
 556:	83 e0       	ldi	r24, 0x03	; 3
 558:	d8 06       	cpc	r13, r24
 55a:	e1 04       	cpc	r14, r1
 55c:	f1 04       	cpc	r15, r1
 55e:	d8 f0       	brcs	.+54     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 560:	c7 01       	movw	r24, r14
 562:	b6 01       	movw	r22, r12
 564:	28 ee       	ldi	r18, 0xE8	; 232
 566:	33 e0       	ldi	r19, 0x03	; 3
 568:	40 e0       	ldi	r20, 0x00	; 0
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 570:	a6 2e       	mov	r10, r22
 572:	b7 2e       	mov	r11, r23
 574:	08 2f       	mov	r16, r24
 576:	19 2f       	mov	r17, r25
 578:	60 e3       	ldi	r22, 0x30	; 48
 57a:	62 0f       	add	r22, r18
 57c:	ce 01       	movw	r24, r28
 57e:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 582:	ca 2c       	mov	r12, r10
 584:	db 2c       	mov	r13, r11
 586:	e0 2e       	mov	r14, r16
 588:	f1 2e       	mov	r15, r17
 58a:	7e c0       	rjmp	.+252    	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 58c:	60 e3       	ldi	r22, 0x30	; 48
 58e:	ce 01       	movw	r24, r28
 590:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 594:	79 c0       	rjmp	.+242    	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 596:	84 e6       	ldi	r24, 0x64	; 100
 598:	c8 16       	cp	r12, r24
 59a:	d1 04       	cpc	r13, r1
 59c:	e1 04       	cpc	r14, r1
 59e:	f1 04       	cpc	r15, r1
 5a0:	08 f4       	brcc	.+2      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5a2:	82 c0       	rjmp	.+260    	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 5a4:	c7 01       	movw	r24, r14
 5a6:	b6 01       	movw	r22, r12
 5a8:	24 e6       	ldi	r18, 0x64	; 100
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	40 e0       	ldi	r20, 0x00	; 0
 5ae:	50 e0       	ldi	r21, 0x00	; 0
 5b0:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 5b4:	a6 2e       	mov	r10, r22
 5b6:	b7 2e       	mov	r11, r23
 5b8:	08 2f       	mov	r16, r24
 5ba:	19 2f       	mov	r17, r25
 5bc:	60 e3       	ldi	r22, 0x30	; 48
 5be:	62 0f       	add	r22, r18
 5c0:	ce 01       	movw	r24, r28
 5c2:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 5c6:	ca 2c       	mov	r12, r10
 5c8:	db 2c       	mov	r13, r11
 5ca:	e0 2e       	mov	r14, r16
 5cc:	f1 2e       	mov	r15, r17
 5ce:	64 c0       	rjmp	.+200    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 5d0:	60 e3       	ldi	r22, 0x30	; 48
 5d2:	ce 01       	movw	r24, r28
 5d4:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 5d8:	5f c0       	rjmp	.+190    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 5da:	c7 01       	movw	r24, r14
 5dc:	b6 01       	movw	r22, r12
 5de:	2a e0       	ldi	r18, 0x0A	; 10
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	40 e0       	ldi	r20, 0x00	; 0
 5e4:	50 e0       	ldi	r21, 0x00	; 0
 5e6:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodsi4>
 5ea:	a6 2e       	mov	r10, r22
 5ec:	60 e3       	ldi	r22, 0x30	; 48
 5ee:	62 0f       	add	r22, r18
 5f0:	ce 01       	movw	r24, r28
 5f2:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 5f6:	ca 2c       	mov	r12, r10
 5f8:	04 c0       	rjmp	.+8      	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5fa:	60 e3       	ldi	r22, 0x30	; 48
 5fc:	ce 01       	movw	r24, r28
 5fe:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 602:	60 e3       	ldi	r22, 0x30	; 48
 604:	6c 0d       	add	r22, r12
 606:	ce 01       	movw	r24, r28
 608:	0e 94 98 00 	call	0x130	; 0x130 <_ZN12lcd_16x2_i2c4dataEc>
 60c:	84 e9       	ldi	r24, 0x94	; 148
 60e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 612:	52 c0       	rjmp	.+164    	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 614:	c1 14       	cp	r12, r1
 616:	81 ee       	ldi	r24, 0xE1	; 225
 618:	d8 06       	cpc	r13, r24
 61a:	85 ef       	ldi	r24, 0xF5	; 245
 61c:	e8 06       	cpc	r14, r24
 61e:	85 e0       	ldi	r24, 0x05	; 5
 620:	f8 06       	cpc	r15, r24
 622:	08 f4       	brcc	.+2      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 624:	0b cf       	rjmp	.-490    	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 626:	ef ce       	rjmp	.-546    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 628:	80 e8       	ldi	r24, 0x80	; 128
 62a:	c8 16       	cp	r12, r24
 62c:	86 e9       	ldi	r24, 0x96	; 150
 62e:	d8 06       	cpc	r13, r24
 630:	88 e9       	ldi	r24, 0x98	; 152
 632:	e8 06       	cpc	r14, r24
 634:	f1 04       	cpc	r15, r1
 636:	08 f0       	brcs	.+2      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 638:	09 cf       	rjmp	.-494    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 63a:	1e cf       	rjmp	.-452    	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 63c:	80 e4       	ldi	r24, 0x40	; 64
 63e:	c8 16       	cp	r12, r24
 640:	82 e4       	ldi	r24, 0x42	; 66
 642:	d8 06       	cpc	r13, r24
 644:	8f e0       	ldi	r24, 0x0F	; 15
 646:	e8 06       	cpc	r14, r24
 648:	f1 04       	cpc	r15, r1
 64a:	08 f0       	brcs	.+2      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 64c:	22 cf       	rjmp	.-444    	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 64e:	37 cf       	rjmp	.-402    	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 650:	80 ea       	ldi	r24, 0xA0	; 160
 652:	c8 16       	cp	r12, r24
 654:	86 e8       	ldi	r24, 0x86	; 134
 656:	d8 06       	cpc	r13, r24
 658:	81 e0       	ldi	r24, 0x01	; 1
 65a:	e8 06       	cpc	r14, r24
 65c:	f1 04       	cpc	r15, r1
 65e:	08 f0       	brcs	.+2      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 660:	3b cf       	rjmp	.-394    	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 662:	50 cf       	rjmp	.-352    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 664:	80 e1       	ldi	r24, 0x10	; 16
 666:	c8 16       	cp	r12, r24
 668:	87 e2       	ldi	r24, 0x27	; 39
 66a:	d8 06       	cpc	r13, r24
 66c:	e1 04       	cpc	r14, r1
 66e:	f1 04       	cpc	r15, r1
 670:	08 f0       	brcs	.+2      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 672:	54 cf       	rjmp	.-344    	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 674:	69 cf       	rjmp	.-302    	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 676:	88 ee       	ldi	r24, 0xE8	; 232
 678:	c8 16       	cp	r12, r24
 67a:	83 e0       	ldi	r24, 0x03	; 3
 67c:	d8 06       	cpc	r13, r24
 67e:	e1 04       	cpc	r14, r1
 680:	f1 04       	cpc	r15, r1
 682:	08 f0       	brcs	.+2      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 684:	6d cf       	rjmp	.-294    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 686:	82 cf       	rjmp	.-252    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 688:	84 e6       	ldi	r24, 0x64	; 100
 68a:	c8 16       	cp	r12, r24
 68c:	d1 04       	cpc	r13, r1
 68e:	e1 04       	cpc	r14, r1
 690:	f1 04       	cpc	r15, r1
 692:	08 f0       	brcs	.+2      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 694:	87 cf       	rjmp	.-242    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 696:	9c cf       	rjmp	.-200    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 698:	8a e0       	ldi	r24, 0x0A	; 10
 69a:	c8 16       	cp	r12, r24
 69c:	d1 04       	cpc	r13, r1
 69e:	e1 04       	cpc	r14, r1
 6a0:	f1 04       	cpc	r15, r1
 6a2:	08 f4       	brcc	.+2      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a4:	aa cf       	rjmp	.-172    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 6a6:	99 cf       	rjmp	.-206    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 6a8:	8a e0       	ldi	r24, 0x0A	; 10
 6aa:	c8 16       	cp	r12, r24
 6ac:	d1 04       	cpc	r13, r1
 6ae:	e1 04       	cpc	r14, r1
 6b0:	f1 04       	cpc	r15, r1
 6b2:	08 f4       	brcc	.+2      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b4:	a6 cf       	rjmp	.-180    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 6b6:	91 cf       	rjmp	.-222    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 6b8:	df 91       	pop	r29
 6ba:	cf 91       	pop	r28
 6bc:	1f 91       	pop	r17
 6be:	0f 91       	pop	r16
 6c0:	ff 90       	pop	r15
 6c2:	ef 90       	pop	r14
 6c4:	df 90       	pop	r13
 6c6:	cf 90       	pop	r12
 6c8:	bf 90       	pop	r11
 6ca:	af 90       	pop	r10
 6cc:	08 95       	ret

000006ce <_Z14serial_receivev>:
	}
	return 0;
}

char serial_receive() {
	while ((UCSR0A & (1 << RXC0)) == 0);
 6ce:	e0 ec       	ldi	r30, 0xC0	; 192
 6d0:	f0 e0       	ldi	r31, 0x00	; 0
 6d2:	80 81       	ld	r24, Z
 6d4:	88 23       	and	r24, r24
 6d6:	ec f7       	brge	.-6      	; 0x6d2 <_Z14serial_receivev+0x4>
	int value = UDR0;
 6d8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return static_cast<char>(value);
}
 6dc:	08 95       	ret

000006de <_Z10print_infoPcRiS0_>:

void print_info(char* data, int& h, int& m) 
{
 6de:	cf 92       	push	r12
 6e0:	df 92       	push	r13
 6e2:	ef 92       	push	r14
 6e4:	ff 92       	push	r15
 6e6:	0f 93       	push	r16
 6e8:	1f 93       	push	r17
 6ea:	cf 93       	push	r28
 6ec:	df 93       	push	r29
 6ee:	00 d0       	rcall	.+0      	; 0x6f0 <_Z10print_infoPcRiS0_+0x12>
 6f0:	cd b7       	in	r28, 0x3d	; 61
 6f2:	de b7       	in	r29, 0x3e	; 62
 6f4:	6c 01       	movw	r12, r24
 6f6:	7b 01       	movw	r14, r22
 6f8:	8a 01       	movw	r16, r20
  class lcd_16x2_i2c lcd;
 6fa:	ce 01       	movw	r24, r28
 6fc:	01 96       	adiw	r24, 0x01	; 1
 6fe:	0e 94 17 01 	call	0x22e	; 0x22e <_ZN12lcd_16x2_i2cC1Ev>
 702:	f6 01       	movw	r30, r12
	int comma_count = 0;
	int i = 0;
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	90 e0       	ldi	r25, 0x00	; 0
}

void print_info(char* data, int& h, int& m) 
{
  class lcd_16x2_i2c lcd;
	int comma_count = 0;
 708:	40 e0       	ldi	r20, 0x00	; 0
 70a:	50 e0       	ldi	r21, 0x00	; 0
	int i = 0;
	while (comma_count < 1) 
	   { if (data[i] == ',')	comma_count++;
 70c:	21 91       	ld	r18, Z+
 70e:	2c 32       	cpi	r18, 0x2C	; 44
 710:	11 f4       	brne	.+4      	; 0x716 <_Z10print_infoPcRiS0_+0x38>
 712:	4f 5f       	subi	r20, 0xFF	; 255
 714:	5f 4f       	sbci	r21, 0xFF	; 255
		 i++;
 716:	01 96       	adiw	r24, 0x01	; 1
void print_info(char* data, int& h, int& m) 
{
  class lcd_16x2_i2c lcd;
	int comma_count = 0;
	int i = 0;
	while (comma_count < 1) 
 718:	14 16       	cp	r1, r20
 71a:	15 06       	cpc	r1, r21
 71c:	bc f7       	brge	.-18     	; 0x70c <_Z10print_infoPcRiS0_+0x2e>
	   { if (data[i] == ',')	comma_count++;
		 i++;
	   }

  h = (data[i  ]-0x30)*10 + (data[i+1]-0x30);
 71e:	f6 01       	movw	r30, r12
 720:	e8 0f       	add	r30, r24
 722:	f9 1f       	adc	r31, r25
 724:	80 81       	ld	r24, Z
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	c0 97       	sbiw	r24, 0x30	; 48
 72a:	9c 01       	movw	r18, r24
 72c:	22 0f       	add	r18, r18
 72e:	33 1f       	adc	r19, r19
 730:	88 0f       	add	r24, r24
 732:	99 1f       	adc	r25, r25
 734:	88 0f       	add	r24, r24
 736:	99 1f       	adc	r25, r25
 738:	88 0f       	add	r24, r24
 73a:	99 1f       	adc	r25, r25
 73c:	82 0f       	add	r24, r18
 73e:	93 1f       	adc	r25, r19
 740:	21 81       	ldd	r18, Z+1	; 0x01
 742:	30 e0       	ldi	r19, 0x00	; 0
 744:	20 53       	subi	r18, 0x30	; 48
 746:	31 09       	sbc	r19, r1
 748:	82 0f       	add	r24, r18
 74a:	93 1f       	adc	r25, r19
 74c:	d7 01       	movw	r26, r14
 74e:	8d 93       	st	X+, r24
 750:	9c 93       	st	X, r25
  m = (data[i+2]-0x30)*10 + (data[i+3]-0x30);
 752:	82 81       	ldd	r24, Z+2	; 0x02
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	c0 97       	sbiw	r24, 0x30	; 48
 758:	9c 01       	movw	r18, r24
 75a:	22 0f       	add	r18, r18
 75c:	33 1f       	adc	r19, r19
 75e:	88 0f       	add	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	88 0f       	add	r24, r24
 764:	99 1f       	adc	r25, r25
 766:	88 0f       	add	r24, r24
 768:	99 1f       	adc	r25, r25
 76a:	82 0f       	add	r24, r18
 76c:	93 1f       	adc	r25, r19
 76e:	23 81       	ldd	r18, Z+3	; 0x03
 770:	30 e0       	ldi	r19, 0x00	; 0
 772:	20 53       	subi	r18, 0x30	; 48
 774:	31 09       	sbc	r19, r1
 776:	82 0f       	add	r24, r18
 778:	93 1f       	adc	r25, r19
 77a:	f8 01       	movw	r30, r16
 77c:	91 83       	std	Z+1, r25	; 0x01
 77e:	80 83       	st	Z, r24
  
  lcd.da('H');
 780:	68 e4       	ldi	r22, 0x48	; 72
 782:	ce 01       	movw	r24, r28
 784:	01 96       	adiw	r24, 0x01	; 1
 786:	0e 94 95 01 	call	0x32a	; 0x32a <_ZN12lcd_16x2_i2c2daEc>
  lcd.dd(h);
 78a:	d7 01       	movw	r26, r14
 78c:	4d 91       	ld	r20, X+
 78e:	5c 91       	ld	r21, X
 790:	05 2e       	mov	r0, r21
 792:	00 0c       	add	r0, r0
 794:	66 0b       	sbc	r22, r22
 796:	77 0b       	sbc	r23, r23
 798:	ce 01       	movw	r24, r28
 79a:	01 96       	adiw	r24, 0x01	; 1
 79c:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN12lcd_16x2_i2c2ddEm>
  lcd.da('M'); 
 7a0:	6d e4       	ldi	r22, 0x4D	; 77
 7a2:	ce 01       	movw	r24, r28
 7a4:	01 96       	adiw	r24, 0x01	; 1
 7a6:	0e 94 95 01 	call	0x32a	; 0x32a <_ZN12lcd_16x2_i2c2daEc>
  lcd.dd(m);
 7aa:	f8 01       	movw	r30, r16
 7ac:	40 81       	ld	r20, Z
 7ae:	51 81       	ldd	r21, Z+1	; 0x01
 7b0:	05 2e       	mov	r0, r21
 7b2:	00 0c       	add	r0, r0
 7b4:	66 0b       	sbc	r22, r22
 7b6:	77 0b       	sbc	r23, r23
 7b8:	ce 01       	movw	r24, r28
 7ba:	01 96       	adiw	r24, 0x01	; 1
 7bc:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN12lcd_16x2_i2c2ddEm>
}
 7c0:	0f 90       	pop	r0
 7c2:	0f 90       	pop	r0
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	1f 91       	pop	r17
 7ca:	0f 91       	pop	r16
 7cc:	ff 90       	pop	r15
 7ce:	ef 90       	pop	r14
 7d0:	df 90       	pop	r13
 7d2:	cf 90       	pop	r12
 7d4:	08 95       	ret

000007d6 <_Z5cyclei>:

void cycle(int hours){
 7d6:	bc 01       	movw	r22, r24
	int i = 0;
	while (i < hours){
 7d8:	18 16       	cp	r1, r24
 7da:	19 06       	cpc	r1, r25
 7dc:	8c f5       	brge	.+98     	; 0x840 <_Z5cyclei+0x6a>
 7de:	40 e0       	ldi	r20, 0x00	; 0
 7e0:	50 e0       	ldi	r21, 0x00	; 0
		for (int i = 0; i < 200; i++){
			PORTB = 0b10;
 7e2:	92 e0       	ldi	r25, 0x02	; 2
  lcd.dd(m);
}

void cycle(int hours){
	int i = 0;
	while (i < hours){
 7e4:	28 ec       	ldi	r18, 0xC8	; 200
 7e6:	30 e0       	ldi	r19, 0x00	; 0
		for (int i = 0; i < 200; i++){
			PORTB = 0b10;
 7e8:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7ea:	e9 ef       	ldi	r30, 0xF9	; 249
 7ec:	f0 e0       	ldi	r31, 0x00	; 0
 7ee:	31 97       	sbiw	r30, 0x01	; 1
 7f0:	f1 f7       	brne	.-4      	; 0x7ee <_Z5cyclei+0x18>
 7f2:	00 c0       	rjmp	.+0      	; 0x7f4 <_Z5cyclei+0x1e>
 7f4:	00 00       	nop
			_delay_ms(1);
			PORTB = 0b00;
 7f6:	15 b8       	out	0x05, r1	; 5
 7f8:	ed e8       	ldi	r30, 0x8D	; 141
 7fa:	f2 e1       	ldi	r31, 0x12	; 18
 7fc:	31 97       	sbiw	r30, 0x01	; 1
 7fe:	f1 f7       	brne	.-4      	; 0x7fc <_Z5cyclei+0x26>
 800:	00 c0       	rjmp	.+0      	; 0x802 <_Z5cyclei+0x2c>
 802:	00 00       	nop
 804:	21 50       	subi	r18, 0x01	; 1
 806:	31 09       	sbc	r19, r1
}

void cycle(int hours){
	int i = 0;
	while (i < hours){
		for (int i = 0; i < 200; i++){
 808:	79 f7       	brne	.-34     	; 0x7e8 <_Z5cyclei+0x12>
			PORTB = 0b10;
			_delay_ms(1);
			PORTB = 0b00;
			_delay_ms(19);
		}
		i++;
 80a:	4f 5f       	subi	r20, 0xFF	; 255
 80c:	5f 4f       	sbci	r21, 0xFF	; 255
 80e:	28 ec       	ldi	r18, 0xC8	; 200
 810:	30 e0       	ldi	r19, 0x00	; 0
 812:	04 c0       	rjmp	.+8      	; 0x81c <_Z5cyclei+0x46>
  lcd.dd(m);
}

void cycle(int hours){
	int i = 0;
	while (i < hours){
 814:	64 17       	cp	r22, r20
 816:	75 07       	cpc	r23, r21
 818:	29 f7       	brne	.-54     	; 0x7e4 <_Z5cyclei+0xe>
 81a:	08 95       	ret
			PORTB = 0b00;
			_delay_ms(19);
		}
		i++;
			for (int i = 0; i < 200; i++){
				PORTB = 0b10;
 81c:	95 b9       	out	0x05, r25	; 5
 81e:	e3 ef       	ldi	r30, 0xF3	; 243
 820:	f1 e0       	ldi	r31, 0x01	; 1
 822:	31 97       	sbiw	r30, 0x01	; 1
 824:	f1 f7       	brne	.-4      	; 0x822 <_Z5cyclei+0x4c>
 826:	00 c0       	rjmp	.+0      	; 0x828 <_Z5cyclei+0x52>
 828:	00 00       	nop
				_delay_ms(2);
				PORTB = 0b00;
 82a:	15 b8       	out	0x05, r1	; 5
 82c:	ed e8       	ldi	r30, 0x8D	; 141
 82e:	f2 e1       	ldi	r31, 0x12	; 18
 830:	31 97       	sbiw	r30, 0x01	; 1
 832:	f1 f7       	brne	.-4      	; 0x830 <_Z5cyclei+0x5a>
 834:	00 c0       	rjmp	.+0      	; 0x836 <_Z5cyclei+0x60>
 836:	00 00       	nop
 838:	21 50       	subi	r18, 0x01	; 1
 83a:	31 09       	sbc	r19, r1
			_delay_ms(1);
			PORTB = 0b00;
			_delay_ms(19);
		}
		i++;
			for (int i = 0; i < 200; i++){
 83c:	79 f7       	brne	.-34     	; 0x81c <_Z5cyclei+0x46>
 83e:	ea cf       	rjmp	.-44     	; 0x814 <_Z5cyclei+0x3e>
 840:	08 95       	ret

00000842 <main>:

void cycle(int);



int main(void) {
 842:	cf 93       	push	r28
 844:	df 93       	push	r29
 846:	cd b7       	in	r28, 0x3d	; 61
 848:	de b7       	in	r29, 0x3e	; 62
 84a:	ca 56       	subi	r28, 0x6A	; 106
 84c:	d1 09       	sbc	r29, r1
 84e:	0f b6       	in	r0, 0x3f	; 63
 850:	f8 94       	cli
 852:	de bf       	out	0x3e, r29	; 62
 854:	0f be       	out	0x3f, r0	; 63
 856:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0b1110;
 858:	8e e0       	ldi	r24, 0x0E	; 14
 85a:	84 b9       	out	0x04, r24	; 4
	
	
	
	class lcd_16x2_i2c lcd;
 85c:	ce 01       	movw	r24, r28
 85e:	01 96       	adiw	r24, 0x01	; 1
 860:	0e 94 17 01 	call	0x22e	; 0x22e <_ZN12lcd_16x2_i2cC1Ev>


	freq_8mhz();
 864:	0e 94 4b 00 	call	0x96	; 0x96 <_Z9freq_8mhzv>
	UBRR0H = 0;
 868:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = 103;
 86c:	87 e6       	ldi	r24, 0x67	; 103
 86e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0A |= (1 << U2X0);
 872:	e0 ec       	ldi	r30, 0xC0	; 192
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	80 81       	ld	r24, Z
 878:	82 60       	ori	r24, 0x02	; 2
 87a:	80 83       	st	Z, r24
	UCSR0B |= (1 << RXEN0);
 87c:	e1 ec       	ldi	r30, 0xC1	; 193
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	80 81       	ld	r24, Z
 882:	80 61       	ori	r24, 0x10	; 16
 884:	80 83       	st	Z, r24

	char a;
	do {
		a = serial_receive();
 886:	0e 94 67 03 	call	0x6ce	; 0x6ce <_Z14serial_receivev>
	} while (a != '$');
 88a:	84 32       	cpi	r24, 0x24	; 36
 88c:	e1 f7       	brne	.-8      	; 0x886 <main+0x44>
 88e:	8e 01       	movw	r16, r28
 890:	0d 5f       	subi	r16, 0xFD	; 253
 892:	1f 4f       	sbci	r17, 0xFF	; 255
 894:	7e 01       	movw	r14, r28
 896:	83 e5       	ldi	r24, 0x53	; 83
 898:	e8 0e       	add	r14, r24
 89a:	f1 1c       	adc	r15, r1

	const int n = 80;
	char c[100];
	for (int i = 0; i < n; i++) {
		c[i] = serial_receive();
 89c:	0e 94 67 03 	call	0x6ce	; 0x6ce <_Z14serial_receivev>
 8a0:	f8 01       	movw	r30, r16
 8a2:	81 93       	st	Z+, r24
 8a4:	8f 01       	movw	r16, r30
		a = serial_receive();
	} while (a != '$');

	const int n = 80;
	char c[100];
	for (int i = 0; i < n; i++) {
 8a6:	ee 15       	cp	r30, r14
 8a8:	ff 05       	cpc	r31, r15
 8aa:	c1 f7       	brne	.-16     	; 0x89c <main+0x5a>
		c[i] = serial_receive();
	}

	int ho, mi;
	print_info(c, ho, mi);
 8ac:	ae 01       	movw	r20, r28
 8ae:	47 59       	subi	r20, 0x97	; 151
 8b0:	5f 4f       	sbci	r21, 0xFF	; 255
 8b2:	be 01       	movw	r22, r28
 8b4:	69 59       	subi	r22, 0x99	; 153
 8b6:	7f 4f       	sbci	r23, 0xFF	; 255
 8b8:	ce 01       	movw	r24, r28
 8ba:	03 96       	adiw	r24, 0x03	; 3
 8bc:	0e 94 6f 03 	call	0x6de	; 0x6de <_Z10print_infoPcRiS0_>
	
	
	cycle(ho);
 8c0:	a9 96       	adiw	r28, 0x29	; 41
 8c2:	8e ad       	ldd	r24, Y+62	; 0x3e
 8c4:	9f ad       	ldd	r25, Y+63	; 0x3f
 8c6:	a9 97       	sbiw	r28, 0x29	; 41
 8c8:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <_Z5cyclei>
 8cc:	ff cf       	rjmp	.-2      	; 0x8cc <main+0x8a>

000008ce <__udivmodsi4>:
 8ce:	a1 e2       	ldi	r26, 0x21	; 33
 8d0:	1a 2e       	mov	r1, r26
 8d2:	aa 1b       	sub	r26, r26
 8d4:	bb 1b       	sub	r27, r27
 8d6:	fd 01       	movw	r30, r26
 8d8:	0d c0       	rjmp	.+26     	; 0x8f4 <__udivmodsi4_ep>

000008da <__udivmodsi4_loop>:
 8da:	aa 1f       	adc	r26, r26
 8dc:	bb 1f       	adc	r27, r27
 8de:	ee 1f       	adc	r30, r30
 8e0:	ff 1f       	adc	r31, r31
 8e2:	a2 17       	cp	r26, r18
 8e4:	b3 07       	cpc	r27, r19
 8e6:	e4 07       	cpc	r30, r20
 8e8:	f5 07       	cpc	r31, r21
 8ea:	20 f0       	brcs	.+8      	; 0x8f4 <__udivmodsi4_ep>
 8ec:	a2 1b       	sub	r26, r18
 8ee:	b3 0b       	sbc	r27, r19
 8f0:	e4 0b       	sbc	r30, r20
 8f2:	f5 0b       	sbc	r31, r21

000008f4 <__udivmodsi4_ep>:
 8f4:	66 1f       	adc	r22, r22
 8f6:	77 1f       	adc	r23, r23
 8f8:	88 1f       	adc	r24, r24
 8fa:	99 1f       	adc	r25, r25
 8fc:	1a 94       	dec	r1
 8fe:	69 f7       	brne	.-38     	; 0x8da <__udivmodsi4_loop>
 900:	60 95       	com	r22
 902:	70 95       	com	r23
 904:	80 95       	com	r24
 906:	90 95       	com	r25
 908:	9b 01       	movw	r18, r22
 90a:	ac 01       	movw	r20, r24
 90c:	bd 01       	movw	r22, r26
 90e:	cf 01       	movw	r24, r30
 910:	08 95       	ret

00000912 <_exit>:
 912:	f8 94       	cli

00000914 <__stop_program>:
 914:	ff cf       	rjmp	.-2      	; 0x914 <__stop_program>
